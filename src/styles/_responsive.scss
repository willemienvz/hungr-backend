// ===========================
// RESPONSIVE MIXINS
// ===========================

// Mobile-first responsive breakpoints
$breakpoints: (
  'xs': 480px,
  'sm': 768px,
  'md': 1024px,
  'lg': 1200px,
  'xl': 1440px
);

// Responsive mixin for min-width breakpoints
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}";
  }
}

// Responsive mixin for max-width breakpoints
@mixin respond-to-max($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $max-width: map-get($breakpoints, $breakpoint) - 1px;
    @media (max-width: $max-width) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}";
  }
}

// Responsive mixin for range breakpoints
@mixin respond-to-range($min-breakpoint, $max-breakpoint) {
  @if map-has-key($breakpoints, $min-breakpoint) and map-has-key($breakpoints, $max-breakpoint) {
    $min-width: map-get($breakpoints, $min-breakpoint);
    $max-width: map-get($breakpoints, $max-breakpoint) - 1px;
    @media (min-width: $min-width) and (max-width: $max-width) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$min-breakpoint} or #{$max-breakpoint}";
  }
}

// Touch device mixin
@mixin touch-device {
  @media (hover: none) and (pointer: coarse) {
    @content;
  }
}

// High DPI display mixin
@mixin high-dpi {
  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    @content;
  }
}

// Print styles mixin
@mixin print {
  @media print {
    @content;
  }
}

// Accessibility mixin for reduced motion
@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

// Dark mode mixin
@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
} 